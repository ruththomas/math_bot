GET         /                                                                     controllers.SpaController.index
# Levels
GET         /api/levels/getStep/:level/:step                                      controllers.LevelController.getStep(level, step, tokenId: Option[String])
GET         /api/levels/getLevel/:level                                           controllers.LevelController.getLevel(level, tokenId: Option[String])

# Compiler
POST        /api/compile/:tokenId                                                  controllers.MathBotCompiler.compile(tokenId)
GET         /ws/compilews/:tokenId                                                 controllers.MathBotCompiler.compileWs(tokenId)
GET         /api/wsPath/:tokenId/:connection                                       controllers.MathBotCompiler.wsPath(tokenId, connection)

# PLAYER
PUT         /api/token/editLambdas                                                 controllers.PlayerController.editLambdas
PUT         /api/token/color                                                       controllers.PlayerController.changeFunctionColor
POST        /api/token                                                             controllers.PlayerController.addToken
GET         /api/token/activateFunction/:tokenId/:stagedIndex/:activeIndex         controllers.PlayerController.activateFunction(tokenId, stagedIndex, activeIndex)
GET         /api/token/deactivateFunction/:tokenId/:activeIndex/:stagedIndex       controllers.PlayerController.deactivateFunction(tokenId, activeIndex, stagedIndex)
POST        /api/token/test                                                        controllers.PlayerController.test
GET         /api/token/updateActives/:tokenId/:oldIndex/:newIndex                  controllers.PlayerController.moveActiveFunc(tokenId, oldIndex, newIndex)

# Stats
GET         /api/stats/update/:tokenId                                             controllers.StatsController.advanceStats(tokenId, success: Option[String])
GET         /api/stats/switch/:tokenId/:level/:step                                controllers.StatsController.changeLevel(tokenId, level, step)
GET         /api/stats/unlock/:tokenId                                             controllers.StatsController.unlock(tokenId)
GET         /api/stats/reset/:tokenId                                              controllers.StatsController.reset(tokenId)
GET         /api/stats/:tokenId                                                    controllers.StatsController.getStats(tokenId)

# Video hints
GET         /ws/videohint                                                          controllers.VideoHintController.videoSocket

# Get game stats
GET         /api/gameStats/getTokenCount                                           controllers.GameStatsController.getCount

# Admin
GET         /ws/admin                                                              controllers.AdminController.adminSocket
POST        /api/admin/auth/signUp                                                 controllers.AdminController.signUp
POST        /api/admin/auth/login                                                  controllers.AdminController.login
GET         /api/admin/auth/signOut                                                controllers.AdminController.signOut
GET         /api/admin/approved                                                    controllers.AdminController.approved
GET         /api/admin/rejected                                                    controllers.AdminController.rejected
GET         /api/admin/revoke                                                      controllers.AdminController.revoke

# Auth !! Not being used yet !!
GET         /api/auth/requestSession                                               controllers.AuthController.requestSession
POST        /api/auth/resumeSession                                                controllers.AuthController.resumeSession
GET         /api/auth/authorizeGoogle                                              controllers.AuthController.authorizeGoogle
GET         /api/auth/authorizeGithub                                              controllers.AuthController.authorizeGithub
POST        /api/auth/signup                                                       controllers.AuthController.signupMathbot
POST        /api/auth/authorizeMathbot                                             controllers.AuthController.authMathbot
POST        /api/auth/existsCheck                                                  controllers.AuthController.usernameExists
POST        /api/auth/recoverPassword                                              controllers.AuthController.passwordRecovery
POST        /api/auth/updatePassword                                               controllers.AuthController.updatePassword
POST        /api/auth/migrate                                                      controllers.AuthController.migrateAuth0

# !! This must be last - and may show an error until prod build !!
# Map static resources from the /public folder to the file resource path
GET         /*file                                                                 controllers.SpaController.assetOrDefault(file)
