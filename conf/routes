# Load index page
GET         /                                                                     controllers.Assets.at(path="/public", file="index.html")
GET         /callback                                                             controllers.Assets.at(path="/public", file="index.html")
GET         /about                                                                controllers.Assets.at(path="/public", file="index.html")
GET         /robot                                                                controllers.Assets.at(path="/public", file="index.html")
GET         /profile                                                              controllers.Assets.at(path="/public", file="index.html")

# Levels
GET         /api/levels/getStep/:level/:step                                      controllers.LevelController.getStep(level, step, tokenId: Option[String])
GET         /api/levels/getLevel/:level                                           controllers.LevelController.getLevel(level, tokenId: Option[String])

# Compiler
POST        /api/compile/:tokenId                                                  controllers.MathBotCompiler.compile(tokenId)
GET         /ws/compilews/:tokenId                                                 controllers.MathBotCompiler.compileWs(tokenId)
GET         /api/wsPath/:tokenId/:connection                                       controllers.MathBotCompiler.wsPath(tokenId, connection)

# PLAYER
PUT         /api/token/editLambdas                                                 controllers.PlayerController.editLambdas
POST        /api/token                                                             controllers.PlayerController.addToken
GET         /api/token/activateFunction/:tokenId/:stagedIndex/:activeIndex         controllers.PlayerController.activateFunction(tokenId, stagedIndex, activeIndex)
POST        /api/token/test                                                        controllers.PlayerController.test
GET         /api/token/updateActives/:tokenId/:oldIndex/:newIndex                  controllers.PlayerController.moveActiveFunc(tokenId, oldIndex, newIndex)

# Stats
GET         /api/stats/update/:tokenId                                             controllers.StatsController.advanceStats(tokenId, success: Option[String])
GET         /api/stats/switch/:tokenId/:level/:step                                controllers.StatsController.changeLevel(tokenId, level, step)
GET         /api/stats/unlock/:tokenId                                             controllers.StatsController.unlock(tokenId)
GET         /api/stats/reset/:tokenId                                              controllers.StatsController.reset(tokenId)
GET         /api/stats/:tokenId                                                    controllers.StatsController.getStats(tokenId)

# Video hints
GET         /ws/videohint                                                          controllers.VideoHintController.videoSocket

# Get game stats
GET         /api/gameStats/getTokenCount                                           controllers.GameStatsController.getCount

# Auth
GET         /api/auth/requestSession                                               controllers.AuthController.requestSession
POST        /api/auth/resumeSession                                                controllers.AuthController.resumeSession
GET         /api/auth/authorize                                                    controllers.AuthController.authorize()


# !! This must be last - and may show an error until prod build !!
# Map static resources from the /public folder to the file resource path
GET         /*file                                                                controllers.Assets.at(path="/public", file)
